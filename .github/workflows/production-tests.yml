name: Production Deployment Tests

on:
  # Run after successful deployment
  workflow_run:
    workflows: ["Deploy to Production"]
    types:
      - completed
  
  # Allow manual trigger
  workflow_dispatch:
    inputs:
      production_url:
        description: 'Production URL to test'
        required: false
        default: 'https://dashboard.pacdocsign.com'
      test_type:
        description: 'Test type to run'
        required: true
        default: 'smoke'
        type: choice
        options:
        - smoke
        - full
        - both

  # Run on schedule (daily at 6 AM UTC)
  schedule:
    - cron: '0 6 * * *'

jobs:
  production-smoke-tests:
    name: 🔥 Production Smoke Tests
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule' }}
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: packages/dashboard/package-lock.json
      
      - name: 📥 Install Dependencies
        working-directory: packages/dashboard
        run: npm ci
      
      - name: 🎭 Install Playwright Browsers
        working-directory: packages/dashboard
        run: npx playwright install --with-deps chromium
      
      - name: 🔥 Run Smoke Tests
        working-directory: packages/dashboard
        env:
          PRODUCTION_URL: ${{ github.event.inputs.production_url || 'https://dashboard.pacdocsign.com' }}
        run: npm run test:prod:smoke
        continue-on-error: true
      
      - name: 📊 Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: production-smoke-results
          path: |
            packages/dashboard/test-results-production/
            packages/dashboard/playwright-report/
          retention-days: 30
      
      - name: 📱 Notify on Failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          text: '🚨 Production Smoke Tests Failed!'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}

  production-full-tests:
    name: 🧪 Production Full Tests
    runs-on: ubuntu-latest
    needs: production-smoke-tests
    if: ${{ (github.event.inputs.test_type == 'full' || github.event.inputs.test_type == 'both' || github.event_name == 'schedule') && !failure() }}
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: packages/dashboard/package-lock.json
      
      - name: 📥 Install Dependencies
        working-directory: packages/dashboard
        run: npm ci
      
      - name: 🎭 Install Playwright Browsers
        working-directory: packages/dashboard
        run: npx playwright install --with-deps
      
      - name: 🧪 Run Full Production Tests
        working-directory: packages/dashboard
        env:
          PRODUCTION_URL: ${{ github.event.inputs.production_url || 'https://dashboard.pacdocsign.com' }}
        run: npm run test:prod:full
        continue-on-error: true
      
      - name: 📊 Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: production-full-results
          path: |
            packages/dashboard/test-results-production/
            packages/dashboard/playwright-report/
          retention-days: 30

  production-health-check:
    name: 🏥 Production Health Check
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'schedule' }}
    
    steps:
      - name: 🔍 Check Production Site
        run: |
          echo "🔍 Checking production site health..."
          
          PRODUCTION_URL="https://dashboard.pacdocsign.com"
          
          # Basic connectivity check
          if curl -f -s --max-time 30 "$PRODUCTION_URL" > /dev/null; then
            echo "✅ Production site is accessible"
          else
            echo "❌ Production site is not accessible"
            exit 1
          fi
          
          # Check response time
          RESPONSE_TIME=$(curl -o /dev/null -s -w '%{time_total}' "$PRODUCTION_URL")
          echo "⏱️ Response time: ${RESPONSE_TIME}s"
          
          # Warn if response time is too slow
          if (( $(echo "$RESPONSE_TIME > 10.0" | bc -l) )); then
            echo "⚠️ Warning: Slow response time"
          fi
      
      - name: 📱 Notify on Health Check Failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          text: '🚨 Production Health Check Failed!'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}

  test-summary:
    name: 📋 Test Summary
    runs-on: ubuntu-latest
    needs: [production-smoke-tests, production-full-tests]
    if: always()
    
    steps:
      - name: 📋 Generate Summary
        run: |
          echo "# 🚀 Production Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📊 Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Smoke tests result
          if [ "${{ needs.production-smoke-tests.result }}" == "success" ]; then
            echo "- ✅ Smoke Tests: **PASSED**" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.production-smoke-tests.result }}" == "failure" ]; then
            echo "- ❌ Smoke Tests: **FAILED**" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ⏭️ Smoke Tests: **SKIPPED**" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Full tests result
          if [ "${{ needs.production-full-tests.result }}" == "success" ]; then
            echo "- ✅ Full Tests: **PASSED**" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.production-full-tests.result }}" == "failure" ]; then
            echo "- ❌ Full Tests: **FAILED**" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ⏭️ Full Tests: **SKIPPED**" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🔗 Links" >> $GITHUB_STEP_SUMMARY
          echo "- 🌍 [Production Site](https://dashboard.pacdocsign.com)" >> $GITHUB_STEP_SUMMARY
          echo "- 📊 [Test Artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY